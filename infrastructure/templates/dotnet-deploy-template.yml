# templates/dotnet-deploy-template.yml
parameters:
  - name: appName
    type: string
  - name: projectPath
    type: string
  - name: buildOnly
    type: boolean
    default: false
  - name: resourceGroupName
    type: string

steps:
# -----------------
# Install .NET SDK
# -----------------
- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'

# -----------------
# Restore packages
# -----------------
- task: DotNetCoreCLI@2
  displayName: 'Restore Packages'
  inputs:
    command: 'restore'
    projects: ${{ parameters.projectPath }}

# -----------------
# Build project
# -----------------
- task: DotNetCoreCLI@2
  displayName: 'Build Project'
  inputs:
    command: 'build'
    projects: ${{ parameters.projectPath }}
    arguments: '--configuration $(buildConfiguration)'

# -----------------
# Publish only in build stage
# -----------------
- ${{ if eq(parameters.buildOnly, true) }}:
  - task: DotNetCoreCLI@2
    displayName: 'Publish Project'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: ${{ parameters.projectPath }}
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: drop

# -----------------
# Deploy only if not build stage
# -----------------
- ${{ if eq(parameters.buildOnly, false) }}:
  - download: current
    artifact: drop

  - task: AzureWebApp@1
    displayName: 'Deploy to App Service - ${{ parameters.appName }}'
    inputs:
      azureSubscription: $(azureSubscription)
      appType: 'webApp'
      appName: ${{ parameters.appName }}
      resourceGroupName: ${{ parameters.resourceGroupName }}
      package: '$(Pipeline.Workspace)/drop/**/*.zip'

  # Rollback to previous successful artifact if deployment fails
  - task: AzureWebApp@1
    displayName: 'Rollback to Previous Artifact - ${{ parameters.appName }}'
    condition: failed()
    inputs:
      azureSubscription: $(azureSubscription)
      appType: 'webApp'
      appName: ${{ parameters.appName }}
      resourceGroupName: ${{ parameters.resourceGroupName }}
      package: '$(Pipeline.Workspace)/drop_previous/**/*.zip'
